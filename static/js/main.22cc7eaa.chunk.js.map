{"version":3,"sources":["components/Navbar/Navbar.js","components/CardItem/CardItem.js","components/Cards/Cards.js","components/HeroSection/HeroSection.js","components/Footer/Footer.js","components/pages/Home.js","components/Album/Album.js","components/pages/Explore.js","components/pages/FAQ.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["Navbar","useDispatch","walletAddress","useSelector","state","walletIsConnected","useState","click","setClick","button","setButton","open","setOpen","open2","setOpen2","trimmedWalletAddress","closeMobileMenu","openDialog","closeDialog","console","log","closeDialog2","showButton","window","innerWidth","useEffect","addEventListener","className","to","onClick","class","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","style","fontWeight","color","DialogContent","DialogContentText","DialogActions","autoFocus","CardItem","props","data-category","label","alt","src","text","description","Cards","path","HeroSection","fileUploaded","setFileUploaded","fileBuffer","setFileBuffer","uploadedToIPFS","setUploadedToIPFS","ipfsURI","mintedAsNFT","setMintedAsNFT","nftID","open3","setOpen3","resetState","closeDialog3","fontSize","wordWrap","Footer","target","rel","href","Home","useStyles","makeStyles","theme","heroContent","backgroundColor","palette","background","paper","padding","spacing","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","itemID","fileItems2","nftId","name","fileURI","fileURI2","ownerAddress","shortDescription","longDescription","fileType","Album","classes","fileItems","setFileItems","setOwnerAddress","setLongDescription","fileName","setFileName","setFileURI","setFileType","fileId","setFileId","setNftId","fileURIInput","setFileURIInput","fileNameInput","setFileNameInput","fileTypeInput","setFileTypeInput","shortDescriptionInput","setShortDescriptionInput","longDescriptionInput","setLongDescriptionInput","open4","setOpen4","open5","setOpen5","open6","setOpen6","open7","setOpen7","closeDialog4","closeDialog5","closeDialog6","closeDialog7","location","reload","imageToShow","i","length","CssBaseline","Container","maxWidth","Typography","component","variant","align","gutterBottom","paragraph","Grid","container","justifyContent","item","map","key","xs","sm","md","Card","CardMedia","image","title","CardContent","CardActions","size","viewDetails","getButton","TextField","margin","type","onChange","event","value","fullWidth","select","helperText","MenuItem","Explore","FAQ","App","element","reducers","action","payload","address","initialState","configureStore","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.22cc7eaa.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n//Web3\n//import Web3 from 'web3';\n//import detectEthereumProvider from '@metamask/detect-provider';\n\n//redux\nimport { useDispatch, useSelector  } from 'react-redux';\nimport { connectWallet, updateAddress } from \"../../redux/actions\";\n\n//CSS styles\nimport './Navbar.css';\nimport '../Button/Button.css';\n\n//Material UI Components\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction Navbar() {\n  //redux actions\n  const dispatch = useDispatch();\n\n  //redux states\n  const walletAddress = useSelector(state => state.walletAddress);\n  const walletIsConnected = useSelector(state => state.walletIsConnected);\n\n  //Web3 instance\n  //const web3 = new Web3(window.ethereum)\n  //let netId = 0\n  //let trimmedWalletAddress = '0x0'\n  \n  //states\n  const [click, setClick] = useState(false)\n  const [button, setButton] = useState(true)\n  const [open, setOpen] = useState(false)\n  const [open2, setOpen2] = useState(false)\n  const [trimmedWalletAddress, setTrimmedWalletAddress] = useState('0x00')\n\n  const handleClick = () => setClick(!click)\n  const closeMobileMenu = () => setClick(false)\n\n  //handle dialog actions\n  const openDialog = () => {\n    closeMobileMenu()\n    if(walletIsConnected){\n      setOpen2(true)\n    }else{\n      setOpen(true)\n    }\n  }\n\n  const closeDialog = () => {\n    setOpen(false)\n    console.log('connect wallet later')\n  }\n\n  const closeDialog2 = () => {\n    setOpen2(false)\n  }\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false)\n    } else {\n      setButton(true)\n    }\n  }\n\n  //value changed listener\n  useEffect(() => {\n    showButton()\n  }, [])\n\n  useEffect(()=>{\n    console.log('wallet address updated: ', walletAddress)\n  }, [walletAddress])\n\n  useEffect(()=>{\n    console.log('wallet connection status: ', walletIsConnected)\n  }, [walletIsConnected])\n\n  window.addEventListener('resize', showButton);\n\n  //\"Connect Wallet\" button click event: connect user MetaMask wallet\n  /* const connectMetaMaskWallet = async () => {\n    setOpen(false)\n\n    //Metamask provider instance\n    const provider = await detectEthereumProvider()\n\n    //Get network id\n    netId = await web3.eth.net.getId()\n    console.log('net id: ', netId)\n\n    if (provider) {\n      console.log('Good. MetaMask is installed.')\n\n      //Get the MetaMask Account\n      const accts = await provider.request({\n        method: 'eth_requestAccounts'\n      })\n\n      //update wallet connection status, and wallet address\n      setTrimmedWalletAddress(accts[0].substring(0,5) + '...' + accts[0].substring(38, 42))\n      dispatch(connectWallet)\n      dispatch(updateAddress(accts[0]))\n\n    } else {\n      //If MetaMask is not installed\n      console.log('Please install MetaMask!')\n    }\n\n    //console.log(window.ethereum, netId)\n    \n  } */\n\n\n  return (\n    <>\n      <nav className='navbar'>\n        <div className='navbar-container'>\n\n          {/* Platform Title and Logo */}\n\n          <Link to='/fileshare-dapp-UI' className='navbar-logo' onClick={closeMobileMenu}>\n            <i class=\"fa-regular fa-file\"></i>\n            FileShare\n          </Link>\n\n          {/* Menu Items */}\n\n          <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n\n            <li className='nav-item'>\n              <Link to='/fileshare-dapp-UI' className='nav-links' onClick={closeMobileMenu}>\n                Home\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/fileshare-dapp-UI/explore'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Explore\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/fileshare-dapp-UI/faq'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                FAQ\n              </Link>\n            </li>\n\n            <li>\n              <div\n                className='nav-links-mobile'\n                onClick={openDialog}\n              >\n                { walletIsConnected ? trimmedWalletAddress : 'Connect Wallet'}\n              </div>\n            </li>\n\n          </ul>\n\n          {/* Connect Wallet Button */}\n\n          {button && <button \n            className='btn btn--outline btn--medium'\n            onClick={openDialog}\n          >\n            { walletIsConnected ? trimmedWalletAddress : 'Connect Wallet'}\n          </button>}\n\n          {/* Connect Wallet Confrimation Box */}\n          \n          <Dialog\n            open={open}\n            onClose={closeDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n          <DialogTitle id=\"alert-dialog-title\" style={{ fontWeight: \"bold\", color: \"black\"}}>{\"Connect your MetaMask Wallet?\"}</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"bold\", color: \"#43688B\" }}>\n              By connecting your MetaMask wallet, you can become an user of FileShare and enjoy the\n               file-sharing services from our platform. \n            </DialogContentText>\n          </DialogContent>\n\n          <DialogActions>\n            <Button onClick={closeDialog} color=\"primary\">\n              Later\n            </Button>\n            <Button onClick={closeDialog} color=\"primary\" autoFocus>\n              Connect\n            </Button>\n          </DialogActions>\n\n          </Dialog>\n\n          {/* \"Wallet is connected\" Alert Box */}\n          \n          <Dialog\n            open={open2}\n            onClose={closeDialog2}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n          <DialogTitle id=\"alert-dialog-title\">{\"MetaMask wallet is connected successfully!\"}</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"bold\", color: \"#43688B\" }}>\n              {'Wallet address: ' + walletAddress}\n            </DialogContentText>\n          </DialogContent>\n\n          <DialogActions>\n            <Button onClick={closeDialog2} color=\"primary\" autoFocus>\n              OK\n            </Button>\n          </DialogActions>\n\n          </Dialog>\n          \n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction CardItem(props) {\n  return (\n    <>\n      <li className='cards__item'>\n        <div className='cards__item__link'>\n\n          {/* feeature image */}\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\n            <img\n              className='cards__item__img'\n              alt='Image'\n              src={props.src}\n            />\n          </figure>\n          \n          {/* feature description */}\n          <div className='cards__item__info'>\n            <h5 className='cards__item__text'>{props.text}</h5>\n            <h5 className='cards__item__text2'>{props.description}</h5>\n          </div>\n\n        </div>\n      </li>\n    </>\n  );\n}\n\nexport default CardItem;\n","import React from 'react';\nimport './Cards.css';\nimport CardItem from '../CardItem/CardItem';\n\nfunction Cards() {\n  return (\n    <div className='cards'>\n      <h1>Why our platform? Check out the features!</h1>\n      <div className='cards__container'>\n\n        <div className='cards__wrapper'>\n          {/* feature items */}\n\n          <ul className='cards__items'>\n            <CardItem\n              src='https://jacc-cyc.github.io/fileshare-dapp-UI/images/blockchain.jpg'\n              text='Ethereum Blockchain Network'\n              description='It act as our backebone instead of traditional database. No central server. No intermediaries. Share your files directly to someone!'\n              label='Feature#1'\n              path='/services'\n            />\n            \n            <CardItem\n              src='https://jacc-cyc.github.io/fileshare-dapp-UI/images/cyber-security.jpg'\n              text='Ensure Data Privacy and Security'\n              description=\"Secured by blcokchain technologies. Everything is distributed, immutable and public-verified. We don't own your data.\"\n              label='Feature#2'\n              path='/services'\n            />\n          </ul>\n\n          <ul className='cards__items'>\n          <CardItem\n              src='https://jacc-cyc.github.io/fileshare-dapp-UI/images/IPFS.jpg'\n              text='InterPlanetary File System (IPFS)'\n              description='Peer-to-peer distributed file storage protocol. It is being used to store your files in a decentralized way.'\n              label='Feature#3'\n              path='/services'\n            />\n\n            <CardItem\n              src='https://jacc-cyc.github.io/fileshare-dapp-UI/images/NFT.jpg'\n              text='Non-Fungible Token (NFT)'\n              description='It represent the ownership of unique file items. Thus you are the unique owner of your file.'\n              label='Feature#4'\n              path='/services'\n            />\n\n            <CardItem\n              src='https://jacc-cyc.github.io/fileshare-dapp-UI/images/ERC20.jpg'\n              text='Platform Token \"FILO\"'\n              description=\"FileShare's ERC-20 platform token, for rewarding user who share their files in our platform.\"\n              label='Feature#5'\n              path='/products'\n            />\n          </ul>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cards;\n","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\n//redux\nimport { useSelector  } from 'react-redux';\n\n//Web3, smart contracts\n//import Web3 from 'web3';\n//import FileShare from '../../abis/FileShare.json'\n\n//CSS styles\nimport '../../App.css';\nimport '../Button/Button.css';\nimport './HeroSection.css';\n\n//Material UI Components\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction HeroSection() {\n  //ipfs instance\n  /* const ipfsClient = require('ipfs-http-client')\n\n  const ipfs = ipfsClient({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https'\n  }) */\n\n  //redux states\n  const walletAddress = useSelector(state => state.walletAddress);\n  const walletIsConnected = useSelector(state => state.walletIsConnected);\n\n  //Web3 instance\n  //const web3 = new Web3(window.ethereum)\n  \n  //file input ref\n  let inputRef;\n\n  //states\n  const [fileUploaded, setFileUploaded] = useState(false)\n  const [fileBuffer, setFileBuffer] = useState(null)\n  const [uploadedToIPFS, setUploadedToIPFS] = useState(false)\n  const [ipfsURI, setIpfsURI] = useState('undefined')\n  const [mintedAsNFT, setMintedAsNFT] = useState(false)\n  const [nftID, setNftID] = useState('undefined')\n\n  const [open, setOpen] = useState(false)\n  const [open2, setOpen2] = useState(false)\n  const [open3, setOpen3] = useState(false)\n\n  //reset state\n  const resetState = () =>{\n    console.log('resetting state...')\n    setFileUploaded(false)\n    setUploadedToIPFS(false)\n    setFileBuffer(null)\n    setMintedAsNFT(false)\n  }\n\n  //handle dialogs actions\n  const openDialog = () => {\n    setOpen(true)\n  }\n\n  const closeDialog = () => {\n    //Case \"Not minting file as NFT\": close the upload file to IPFS process, reset the states for next upload action\n    setOpen(false)\n    resetState()\n  }\n\n  const openDialog2 = () => {\n    setOpen2(true)\n  }\n\n  const closeDialog2 = () => {\n    //Case \"Minting file as NFT\": close the whole file upload and nft minting process, reset the states for next upload action\n    setOpen2(false)\n    resetState()\n  }\n\n  const openDialog3 = () => {\n    setOpen3(true)\n  }\n\n  const closeDialog3 = () => {\n    //Case \"Minting file as NFT, but wallet is not connected\": close the whole file upload and nft minting process, \n    //and reset the states for next upload action\n    setOpen3(false)\n    resetState()\n  }\n\n  //\"Upload\" button click event: upload user's file to IPFS and mint as NFT\n  /* const uploadFile = (event) =>{\n    event.preventDefault()\n    setFileUploaded(true)\n\n    console.log('onChange: File is captured')\n    console.log(event.target.files[0])\n\n    //process uploaded file\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n\n    reader.readAsArrayBuffer(file)\n\n    reader.onloadend = () =>{\n      //buffer = Buffer(reader.result)\n      setFileBuffer(Buffer(reader.result))\n    }\n\n    //add to IPFS, and mint as NFT\n    //addToIPFS()\n    //mintAsNFT()\n  } */\n\n  //add file to IPFS\n  /* const addToIPFS = () =>{\n    console.log(\"Adding the file to IPFS...\")\n    ipfs.add(fileBuffer, (err, res) => {\n      if(err) console.error(\"Error: \", err)\n\n      console.log('IPFS result: ', res)\n      const hash = res[0].hash\n      setIpfsURI('https://ipfs.infura.io/ipfs/' + hash)\n      setUploadedToIPFS(true)\n    })\n  } */\n\n  //mint the file NFT to a specific wallet address\n  /* const mintAsNFT = async () =>{\n    //close the ipfs upload information box\n    setOpen(false)\n\n    //check if wallet is connected  \n    if(walletIsConnected){\n      console.log(\"minting file as NFT...\")\n\n      //get net id of blockchain network\n      const netId = await web3.eth.net.getId()\n      console.log('net id: ', netId)\n\n      //initialze FileShare contract instance\n      const fileShare = new web3.eth.Contract(FileShare.abi, FileShare.networks[netId].address)\n\n      // await fileShare.methods.mintToken(walletAddress, 100).send({\n      //  from: walletAddress\n      // })\n\n      //\"ETH\" and \"FILO\" token balance check\n      const ethBal = await web3.eth.getBalance(walletAddress);\n      const tokenBal = await fileShare.methods.balanceOfFILO(walletAddress).call()\n      console.log('FILO token balance: ', web3.utils.fromWei(tokenBal))\n      console.log('ETH balance: ', web3.utils.fromWei(ethBal))\n\n      //NFT minting, get the NFT id after minted\n      await fileShare.methods.mintNFT(walletAddress, ipfsURI).send({\n        from: walletAddress\n      })\n      const id = await fileShare.methods.getNFTId().call()\n      setNftID(id)\n\n      setMintedAsNFT(true)\n    }else{\n      console.log('wallet is not connected, cannot mint NFT')\n      setOpen3(true)\n    }\n\n    \n  } */\n\n  //callback function when value changed\n  useEffect(()=>{\n    console.log('fileUploaded status: ', fileUploaded)\n  }, [fileUploaded])\n\n  useEffect(()=>{\n    console.log('File Buffer: ', fileBuffer)\n    if(fileUploaded){\n      //open \"File Upload\" information box, after user uploaded file\n      openDialog()\n      //addToIPFS()\n    }\n  }, [fileBuffer])\n\n  useEffect(() => {\n    console.log('uploadedToIPFS status: ', fileUploaded)\n    if(fileUploaded){\n      //openDialog()\n      //resetState()\n    }\n  }, [uploadedToIPFS])\n\n  useEffect(() => {\n    console.log('IPFS URI: ', ipfsURI)\n  }, [ipfsURI])\n\n  useEffect(() => {\n    console.log('Minted As NFT: ', mintedAsNFT)\n    if(uploadedToIPFS){\n      openDialog2()\n    }\n  }, [mintedAsNFT])\n\n\n  return (\n    <div className='hero-container'>\n      \n      {/* Description text */}\n\n      <h1>Decentralized File-Sharing Platform</h1>\n      <p>Own your files & Share them privately!</p>\n\n      <div className='hero-btns'>\n\n      {/* File upload Button */}\n\n      {/* <input\n        type=\"file\"\n        hidden={true}\n        ref={refParam => inputRef = refParam}\n        onChange={uploadFile}\n      />\n\n        <button \n          className='btn btn--outline btn--large'\n          onClick={() => inputRef.click()}\n        >\n          Upload\n        </button> */}\n\n        <button className='btn btn--outline btn--large'>\n          Upload\n        </button>\n\n\n        {/* Explore Button, link to Explore page */}\n\n        <Link to='/fileshare-dapp-UI/explore'>\n        <button \n          className='btn btn--primary btn--large'\n        >\n          Explore <i className='far fa-play-circle' />\n        </button>\n        </Link>\n\n        {/* \"File Uploaded Successfully\" Information Box */}\n          \n        <Dialog\n            open={open}\n            onClose={closeDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n          \n          {uploadedToIPFS ?\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"black\" }}>\n              {'Share your unique IPFS link to your friend!'}\n            </DialogContentText>\n\n            {/* rgb(128, 128, 226) #43688B */}\n            <DialogContentText id=\"alert-dialog-description\" style={{ wordWrap: \"break-word\", fontWeight: \"bold\", color: \"#43688B\" }}>\n              {ipfsURI}\n            </DialogContentText>\n          </DialogContent> :\n\n            <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"black\" }}>\n              {'Uploading your file to IPFS...'}\n            </DialogContentText>\n          </DialogContent>}\n\n          { uploadedToIPFS ? \n          <DialogActions>\n            <Button onClick={closeDialog} color=\"primary\" autoFocus>\n              Next Time\n            </Button>\n            <Button onClick={closeDialog} color=\"primary\" autoFocus>\n              Mint As NFT\n            </Button>\n          </DialogActions> : \n\n          <DialogActions>\n            <Button onClick={closeDialog} color=\"primary\" autoFocus>\n              \n            </Button>\n          </DialogActions>}\n\n        </Dialog>\n\n        {/* \"Mint as NFT\" Information Box*/}\n        \n        <Dialog\n            open={open2}\n            onClose={closeDialog2}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n          <DialogTitle id=\"alert-dialog-title\">Congrat! Your file is minted as a <i>FileShareNFT#{nftID}</i> to your wallet address!</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"bold\", color: \"#43688B\" }}>\n              {'Wallet address: ' + walletAddress}\n            </DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\" style={{ wordWrap: \"break-word\", fontWeight: \"bold\", color: \"#43688B\" }}>\n              {'URI: ' + ipfsURI}\n            </DialogContentText>\n          </DialogContent>\n\n          <DialogActions>\n            <Button onClick={closeDialog2} color=\"primary\" autoFocus>\n              OK\n            </Button>\n          </DialogActions>\n\n        </Dialog>\n\n        {/* \"Wallet is not connected\" Information Box*/}\n        \n        <Dialog\n            open={open3}\n            onClose={closeDialog3}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n          <DialogTitle id=\"alert-dialog-title\">{\"Action Rejected!\"}</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"\", color: \"#BF9D1F\", fontSize: \"18px\" }}>\n              {\"Please connect your MetaMask Wallet to our platform before minting a NFT. Thanks.\"}\n            </DialogContentText>\n          </DialogContent>\n\n          <DialogActions>\n            <Button onClick={closeDialog3} color=\"primary\" autoFocus>\n              OK\n            </Button>\n          </DialogActions>\n\n        </Dialog>\n\n      </div>\n    </div>\n  );\n}\n\nexport default HeroSection;\n","import React from 'react';\nimport './Footer.css';\nimport { Link } from 'react-router-dom';\n\nfunction Footer() {\n  return (\n    <div className='footer-container'>\n\n\n      <section class='social-media'>\n        <div class='social-media-wrap'>\n\n          {/* Platform Name and Logo */}\n          <div class='footer-logo'>\n            <Link to='/fileshare-dapp-UI' className='social-logo'>\n            <i class=\"fa-regular fa-file\"></i>\n              FileShare\n            </Link>\n          </div>\n\n          {/* Website Right */}\n          <div class='website-rights'>CityU FYP © 2021-2022</div>\n\n          {/* Social Media Icons */}\n          <div class='social-icons'>\n\n            <div class='social-icon-link'>\n              {/* GitHub, Source Code Link*/}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/jacc-cyc/file-sharing-dapp\" className=\"source-code\">Source Code</a>\n              <i class=\"fa-brands fa-github\" />\n            </div>\n\n          </div>\n          \n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport '../../App.css';\nimport Cards from '../Cards/Cards';\nimport HeroSection from '../HeroSection/HeroSection';\nimport Footer from '../Footer/Footer';\n\nfunction Home() {\n  return (\n    <>\n      <HeroSection />\n      <Cards />\n      <Footer />\n    </>\n  );\n}\n\nexport default Home;\n","import React, {useState, useEffect} from 'react';\r\n\r\n//redux\r\nimport { useSelector } from 'react-redux';\r\n\r\n//Web3, smart contracts\r\n//import Web3 from 'web3';\r\n//import FileShare from '../../abis/FileShare.json'\r\n//import NFT from '../../abis/NFT.json'\r\n\r\n//Material UI Components\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  itemID: {\r\n    fontWeight: \"normal\",\r\n  },\r\n}));\r\n\r\n\r\nconst fileItems2 = [\r\n  { id: 1, nftId: 1, name: 'Sample 01', fileURI: \"https://ipfs.infura.io/ipfs/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \r\n  fileURI2: \"https://jacc-cyc.github.io/fileshare-dapp-UI/images/dog.PNG\", ownerAddress: '0x9F04164571FF66d4196bA791eD371fb9a8ba94Cb', \r\n  shortDescription: 'My dog photo', longDescription: 'bla bla bla', fileType: \"png\" },\r\n\r\n  { id: 2, nftId: 2, name: 'Sample 02', fileURI: \"https://ipfs.infura.io/ipfs/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \r\n  fileURI2: \"https://jacc-cyc.github.io/fileshare-dapp-UI/images/wallpaper.jpg\", ownerAddress: '0x9F04164571FF66d4196bA791eD371fb9a8ba94Cb', \r\n  shortDescription: 'a cool wallpaper', longDescription: 'bla bla bla', fileType: \"jpg\" },\r\n\r\n  { id: 3, nftId: 3, name: 'Sample 03', fileURI: \"https://ipfs.infura.io/ipfs/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \r\n  ownerAddress: '0x9F04164571FF66d4196bA791eD371fb9a8ba94Cb', \r\n  shortDescription: 'document testing', longDescription: 'bla bla bla', fileType: \"docx\" },\r\n\r\n  { id: 4, nftId: 4, name: 'Sample 04', fileURI: \"https://ipfs.infura.io/ipfs/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \r\n  ownerAddress: '0x9F04164571FF66d4196bA791eD371fb9a8ba94Cb', \r\n  shortDescription: 'powerpoint testing', longDescription: 'bla bla bla', fileType: \"pptx\" },\r\n\r\n  { id: 5, nftId: 5, name: 'Sample 05', fileURI: \"https://ipfs.infura.io/ipfs/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \r\n  ownerAddress: '0x9F04164571FF66d4196bA791eD371fb9a8ba94Cb', \r\n  shortDescription: 'pdf testing', longDescription: 'bla bla bla', fileType: \"pdf\" },\r\n\r\n  { id: 6, nftId: 6, name: 'Sample 06', fileURI: \"https://ipfs.infura.io/ipfs/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \r\n  ownerAddress: '0x9F04164571FF66d4196bA791eD371fb9a8ba94Cb', \r\n  shortDescription: 'pdf testing', longDescription: 'bla bla bla', fileType: \"pdf\" },\r\n]\r\n\r\n\r\nexport default function Album() {\r\n  const classes = useStyles()\r\n  \r\n  //redux states\r\n  const walletAddress = useSelector(state => state.walletAddress);\r\n  const walletIsConnected = useSelector(state => state.walletIsConnected);\r\n\r\n  //web3 instance\r\n  //const web3 = new Web3(window.ethereum)\r\n\r\n  //initialze FileShare contract instance\r\n  //const fileShare = new web3.eth.Contract(FileShare.abi, FileShare.networks[netId].address)\r\n\r\n  //File data items\r\n  const [fileItems, setFileItems] = useState([])\r\n\r\n  //\"File Details\" Display Box states\r\n  const [ownerAddress, setOwnerAddress] = useState('undefined')\r\n  const [longDescription, setLongDescription] = useState('undefined')\r\n  const [fileName, setFileName] = useState('undefined')\r\n  const [fileURI, setFileURI] = useState('undefined')\r\n  const [fileType, setFileType] = useState('undefined')\r\n  const [fileId, setFileId] = useState('0')\r\n  const [nftId, setNftId] = useState('0')\r\n\r\n  //\"Share File\" user input values states\r\n  const [fileURIInput, setFileURIInput] = useState('')\r\n  const [fileNameInput, setFileNameInput] = useState('')\r\n  const [fileTypeInput, setFileTypeInput] = useState('')\r\n  const [shortDescriptionInput, setShortDescriptionInput] = useState('')\r\n  const [longDescriptionInput, setLongDescriptionInput] = useState('')\r\n  const fileTypes = ['png', 'jpg', 'docx', 'pdf', 'pptx', 'others']\r\n\r\n  //Dialog states\r\n  const [open, setOpen] = useState(false)\r\n  const [open2, setOpen2] = useState(false)\r\n  const [open3, setOpen3] = useState(false)\r\n  const [open4, setOpen4] = useState(false)\r\n  const [open5, setOpen5] = useState(false)\r\n  const [open6, setOpen6] = useState(false)\r\n  const [open7, setOpen7] = useState(false)\r\n\r\n  //Dialog actions\r\n  const openDialog = () =>{\r\n    setOpen3(true);\r\n    /* if(walletIsConnected){\r\n      setOpen3(true);\r\n    }else{\r\n      setOpen2(true);\r\n    } */\r\n  }\r\n\r\n  const closeDialog = () =>{\r\n    setOpen(false)\r\n  }\r\n\r\n  const closeDialog2 = () =>{\r\n    setOpen2(false)\r\n  }\r\n\r\n  const closeDialog3 = () =>{\r\n    setOpen3(false)\r\n    console.log(\"fileURIInput: \", fileURIInput)\r\n    console.log(\"fileNameInput: \", fileNameInput)\r\n    console.log(\"fileTypeInput: \", fileTypeInput)\r\n    console.log(\"shortDescriptionInput: \", shortDescriptionInput)\r\n    console.log(\"longDescriptionInput: \", longDescriptionInput)\r\n  }\r\n\r\n  const closeDialog4 = () =>{\r\n    setOpen4(false)\r\n  }\r\n\r\n  const closeDialog5 = () =>{\r\n    setOpen5(false)\r\n  }\r\n\r\n  const closeDialog6 = () =>{\r\n    setOpen6(false)\r\n  }\r\n\r\n  const closeDialog7 = () =>{\r\n    setOpen7(false)\r\n    //refresh the page, to reload the data from blockchain\r\n    window.location.reload();\r\n  }\r\n\r\n  //\"Share to Public\" button, adding new file item to the blockchain\r\n  /* const addItem = async () =>{\r\n    closeDialog3()\r\n    \r\n    //get the blockchain network id and contract instances\r\n    const netId = await web3.eth.net.getId()\r\n    console.log('net id: ', netId)\r\n    const fileShare = new web3.eth.Contract(FileShare.abi, FileShare.networks[netId].address)\r\n    const nft = new web3.eth.Contract(NFT.abi, NFT.networks[netId].address)\r\n  \r\n    setOpen4(true)\r\n    console.log('adding item to blockchain...')\r\n    //mint the shared file as a NFT\r\n    await fileShare.methods.addItem(walletAddress, fileURIInput, fileNameInput, fileTypeInput, shortDescriptionInput, longDescriptionInput).send({\r\n      from: walletAddress\r\n    })\r\n\r\n    console.log('giving NFT transferral approval to FileShare...')\r\n    //approve FileShare to transfer the file NFT by its id\r\n    const id = await fileShare.methods.getNFTId().call()\r\n    await nft.methods.setPlatformApproval(FileShare.networks[netId].address, id).send({\r\n      from: walletAddress\r\n    })\r\n\r\n    closeDialog4()\r\n\r\n    //refresh the page, to reload the data from blockchain\r\n    window.location.reload();\r\n  } */\r\n\r\n  //transfer the file NFT to new owner from sharer\r\n  /* const transferFile = async () =>{\r\n    console.log(walletAddress)\r\n    console.log(ownerAddress)\r\n\r\n    if(walletAddress === ownerAddress){\r\n      closeDialog5()\r\n      setOpen6(true)\r\n    }else{\r\n      closeDialog5()\r\n      //get the blockchain network id and contract instances\r\n      const netId = await web3.eth.net.getId()\r\n      console.log('net id: ', netId)\r\n      const fileShare = new web3.eth.Contract(FileShare.abi, FileShare.networks[netId].address)\r\n\r\n      setOpen4(true)\r\n      console.log('transferring NFT to new owner...')\r\n      //mint the shared file as a NFT\r\n      await fileShare.methods.transferNFT(ownerAddress, walletAddress, fileId, nftId).send({\r\n        from: walletAddress\r\n      })\r\n\r\n      closeDialog4()\r\n      setOpen7(true)\r\n      //refresh the page, to reload the data from blockchain\r\n      //window.location.reload();\r\n    }\r\n  } */\r\n\r\n  //\"view\" button, display file details information\r\n  const viewDetails = (id) => {\r\n    //console.log('view detail button')\r\n    for(let i=0;i<fileItems.length;i++){\r\n      if(fileItems[i].id === id){\r\n        //console.log(id, fileItems[i].longDescription, fileItems[i].ownerAddress)\r\n        setOwnerAddress(fileItems[i].ownerAddress)\r\n        setLongDescription(fileItems[i].longDescription)\r\n        setFileName(fileItems[i].name)\r\n        setFileURI(fileItems[i].fileURI)\r\n        setFileId(fileItems[i].id)\r\n        setFileType(fileItems[i].fileType)\r\n        setNftId(fileItems[i].nftId)\r\n        break\r\n      }\r\n    }\r\n    setOpen(true)\r\n  }\r\n\r\n  //\"get\" button, retrieve file data item info\r\n  const getButton = (id) => {\r\n    //console.log('get button')\r\n    for(let i=0;i<fileItems.length;i++){\r\n      if(fileItems[i].id === id){\r\n        //console.log(id, fileItems[i].longDescription, fileItems[i].ownerAddress)\r\n        setOwnerAddress(fileItems[i].ownerAddress)\r\n        setFileName(fileItems[i].name)\r\n        setFileURI(fileItems[i].fileURI)\r\n        setFileId(fileItems[i].id)\r\n        setFileType(fileItems[i].fileType)\r\n        setNftId(fileItems[i].nftId)\r\n        break\r\n      }\r\n    }\r\n    setOpen5(true)\r\n    //if(walletIsConnected) setOpen5(true)\r\n    //else setOpen2(true)\r\n  }\r\n\r\n  const imageToShow = (id) => {\r\n    for(let i=0;i<fileItems.length;i++){\r\n      if(fileItems[i].id === id){\r\n        if(fileItems[i].fileType === 'png' || fileItems[i].fileType === 'jpg'){\r\n          return fileItems[i].fileURI2\r\n          //return fileItems[i].fileURI\r\n        }else if(fileItems[i].fileType === 'pdf'){\r\n          return \"https://jacc-cyc.github.io/fileshare-dapp-UI/images/pdf2.png\"\r\n        }else if(fileItems[i].fileType === 'pptx'){\r\n          return \"https://jacc-cyc.github.io/fileshare-dapp-UI/images/ppt.png\"\r\n        }else{\r\n          return \"https://jacc-cyc.github.io/fileshare-dapp-UI/images/document.jpg\"\r\n        }\r\n      }\r\n    }\r\n    return \"https://jacc-cyc.github.io/fileshare-dapp-UI/images/document.jpg\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect...')\r\n    //console.log(fileItems2)\r\n\r\n    //fetch data items from the blockchain\r\n    /* const fetchData = async () =>{\r\n      //get the blockchain network id and FileShare contract instance\r\n      const netId = await web3.eth.net.getId()\r\n      console.log('net id: ', netId)\r\n      const fileShare = new web3.eth.Contract(FileShare.abi, FileShare.networks[netId].address)\r\n\r\n      //get the file items\r\n      const items = await fileShare.methods.getItems().call()\r\n      console.log(\"before: \", items);\r\n      //console.log(items[1].fileURI)\r\n\r\n      //remove the redundant data item\r\n      //console.log(items.length)\r\n      let len = items.length\r\n      while(len--){\r\n        if(items[len].ownerAddress === '' || items[len].id === 0){\r\n          items.splice(len,1)\r\n        }\r\n      }\r\n\r\n      console.log(\"after: \", items);\r\n      setFileItems(items)\r\n    }\r\n\r\n    fetchData() */\r\n\r\n    setFileItems(fileItems2)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n        {/* Top Section */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            Explore Shared Files\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n              Here you can find variety of files shared from other users. Get what you want and \r\n              become the unique owner of the file with a <i>FileShareNFT</i>.\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n              To share your file. Just press the below button!\r\n            </Typography>\r\n\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justifyContent=\"center\">\r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={openDialog}>\r\n                    Share to Public\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n\r\n          </Container>\r\n        </div>\r\n        \r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n\r\n          {/* File Data Item Section */}\r\n\r\n          <Grid container spacing={4}>\r\n            {fileItems.map((item) => (\r\n              <Grid item key={item.id} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n\r\n                  {/* image */}\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image={imageToShow(item.id)}\r\n                    title=\"Image title\"\r\n                  />\r\n\r\n                  {/* Description */}\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {item.name}\r\n                    </Typography>\r\n                    <Typography>\r\n                      {item.shortDescription === '' ? 'No Description' : item.shortDescription}\r\n                    </Typography>\r\n                  </CardContent>\r\n\r\n                  {/* Button */}\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => viewDetails(item.id)}>\r\n                      View\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => getButton(item.id)}>\r\n                      Get\r\n                    </Button>\r\n                  </CardActions>\r\n                  \r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n        </Container>\r\n\r\n        {/* \"File Deatils\" Information Box*/}\r\n        \r\n        <Dialog\r\n            open={open}\r\n            onClose={closeDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n          <DialogTitle id=\"alert-dialog-title\"><i>{\"FileShareNFT#\" + nftId}</i> &nbsp; {\"'\" + fileName + \"'\"}</DialogTitle>\r\n\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"bold\" }}>\r\n              Item ID: <span className={classes.itemID}>{fileId}</span>\r\n            </DialogContentText>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"bold\" }}>\r\n              {'File URI: '}\r\n            </DialogContentText>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ wordWrap: \"break-word\", fontWeight: \"\", color: \"#43688B\" }}>\r\n              {fileURI}\r\n            </DialogContentText>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"bold\" }}>\r\n              {'Owner address: '}\r\n            </DialogContentText>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"\", color: \"#43688B\" }}>\r\n              {ownerAddress}\r\n            </DialogContentText>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"bold\" }}>\r\n              {'Description: '}\r\n            </DialogContentText>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ wordWrap: \"break-word\", fontWeight: \"\", color: \"#43688B\" }}>\r\n              {longDescription === '' ? 'The sharer did not say anything about this file.' : longDescription}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={closeDialog} color=\"primary\" autoFocus>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n        {/* \"Wallet is not connected\" Information Box*/}\r\n        \r\n        <Dialog\r\n            open={open2}\r\n            onClose={closeDialog2}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"\", color: \"#BF9D1F\", fontSize: \"18px\" }}>\r\n              {\"Please connect your MetaMask Wallet to our platform before using our file-sharing features. Thanks.\"}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={closeDialog2} color=\"primary\" autoFocus>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n        {/* \"MetaMask Transaction\" Information Box*/}\r\n        \r\n        <Dialog\r\n            open={open4}\r\n            onClose={closeDialog4}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontSize: \"18px\" }}>\r\n              {\"Waiting for MetaMask Transactions...\"}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={closeDialog4} color=\"primary\" autoFocus>\r\n              \r\n            </Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n        {/* \"Share File\" Input Box */}\r\n        \r\n        <Dialog open={open3} onClose={closeDialog3} aria-labelledby=\"form-dialog-title\">\r\n\r\n        <DialogTitle id=\"form-dialog-title\">Share My File</DialogTitle>\r\n\r\n        <DialogContent>\r\n\r\n          <DialogContentText>\r\n            To share your file in our platform, please fill in the below information for your file. The file will become\r\n             a <i>FileShareNFT</i> and maybe \"GET\" by someone later. Also, you will receive our \"FILO\" platform token for sharing!\r\n          </DialogContentText>\r\n\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"fileURI\"\r\n            label=\"File URI (IPFS link)\"\r\n            type=\"text\"\r\n            onChange={(event) => {setFileURIInput(event.target.value)}}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"fileName\"\r\n            label=\"File name\"\r\n            type=\"text\"\r\n            onChange={(event) => {setFileNameInput(event.target.value)}}\r\n            fullWidth\r\n          />\r\n          \r\n          \r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"shortDescription\"\r\n            label=\"Short description\"\r\n            type=\"text\"\r\n            onChange={(event) => {setShortDescriptionInput(event.target.value)}}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"longDescription\"\r\n            label=\"Detail description\"\r\n            type=\"text\"\r\n            onChange={(event) => {setLongDescriptionInput(event.target.value)}}\r\n            fullWidth\r\n            style={{ paddingBottom: \"10px\"}}\r\n          />\r\n          <TextField\r\n            id=\"fileType\"\r\n            select\r\n            label=\"File Type\"\r\n            value={fileTypeInput}\r\n            onChange={(event) => {setFileTypeInput(event.target.value)}}\r\n            helperText=\"Please select your file type\"\r\n            style={{ paddingTop: \"0px\" , paddingBottom: \"\"}}\r\n          >\r\n            {fileTypes.map((fileType) => (\r\n              <MenuItem key={fileType} value={fileType}>\r\n                {fileType}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={closeDialog3} color=\"primary\">\r\n            Later\r\n          </Button>\r\n          <Button onClick={closeDialog3} color=\"primary\">\r\n            Share\r\n          </Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n\r\n      {/* \"Get File\" Information Box*/}\r\n        \r\n      <Dialog\r\n            open={open5}\r\n            onClose={closeDialog5}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Interested in '\" + fileName + \"' ?\"}</DialogTitle>\r\n\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"bold\", color: \"#43688B\" }}>\r\n               Pressing 'Yes' means that <i>FileShare</i> will transfer this <i>FileShareNFT</i> to your wallet address. And you\r\n                will become the unique owner of this file after that!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={closeDialog5} color=\"primary\" autoFocus>\r\n              NO\r\n            </Button>\r\n            <Button onClick={closeDialog5} color=\"primary\" autoFocus>\r\n              YES\r\n            </Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n        {/* \"You are the owner\" Information Box*/}\r\n        \r\n         <Dialog\r\n            open={open6}\r\n            onClose={closeDialog6}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ fontWeight: \"\", color: \"#BF9D1F\", fontSize: \"18px\" }}>\r\n              Oops!! You are already the original owner (sharer) of <i>FileShareNFT#{nftId}</i>.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={closeDialog6} color=\"primary\" autoFocus>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n        {/* \"Congrat for getting the file NFT\" Information Box*/}\r\n        \r\n        <Dialog\r\n            open={open7}\r\n            onClose={closeDialog7}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n          <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\" style={{ fontSize: \"18px\", fontWeight: \"bold\", color: \"black\" }}>\r\n              Congrat! You are now the unique owner of <i>FileShareNFT#{nftId}</i>.\r\n            </DialogContentText>\r\n\r\n            <DialogContentText id=\"alert-dialog-description\" style={{ wordWrap: \"break-word\", color: \"#43688B\", fontSize: \"18px\" }}>\r\n              {fileURI}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={closeDialog7} color=\"primary\" autoFocus>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}","import React from 'react';\nimport '../../App.css';\nimport Album from '../Album/Album';\nimport Footer from '../Footer/Footer';\n\nexport default function Explore() {\n  return (\n    <>\n    <Album />\n    <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport '../../App.css';\nimport Footer from '../Footer/Footer';\n\nexport default function FAQ() {\n  return (\n    <div>\n      <div className='faq'>\n\n      <h2>Frequently Asked Questions:</h2>\n      \n      <h3>What is FileShare? Do I need to create an account for it?</h3>\n      <p>FileShare is a decentralized file-sharing platform for everyone. We utilzed Ethereum Blockchain and IPFS to perform file-sharing\n        in a secured and distributed way. You don't need to create/register an account in FileShare, all you need is a MetaMask wallet\n        to connect with FileShare. </p>\n\n      <h3>How is this decentralized? Where are my files stored?</h3>\n      <p>Instead of a traditional database, FileShare use IPFS to store your files, and Ethereum Blockchain to record the file transaction and user \n        infromation (e.g wallet address). Thus, there is no central authorities behind the platform, everything is \n        transparent and public-verified. </p>\n\n      <h3>How can I be the unique owner to my file?</h3>\n      <p>Every file uploaded to FileShare will become a NFT and minted to your wallet address. For receiving shared-file from others, the corresponding\n         NFT will be transferred to your address automatically.\n      </p>\n\n      <h3>Do FileShare own any of my data?</h3>\n      <p>No.</p>\n\n      </div>\n\n      <Footer />\n    </div>\n  \n\n  );\n}\n","import React from 'react';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport './App.css';\r\nimport Home from './components/pages/Home';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Explore from './components/pages/Explore';\r\nimport FAQ from './components/pages/FAQ';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar />\r\n        <Routes>\r\n          <Route path='/fileshare-dapp-UI' element={<Home />}/>\r\n          <Route path='/fileshare-dapp-UI/explore' element={<Explore />}/>\r\n          <Route path='/fileshare-dapp-UI/faq' element={<FAQ />}/>\r\n        </Routes>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","function reducers(state, action) {\r\n    switch (action.type) {\r\n      case 'CONNECT_WALLET':\r\n        return { ...state, walletIsConnected: action.payload }\r\n      case 'UPDATE_ADDRESS':\r\n        return { ...state, walletAddress: action.address }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport default reducers;","import { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst initialState = {\r\n    walletIsConnected: false,\r\n    walletAddress: 'undefined'\r\n}\r\n\r\nfunction configureStore(state = initialState) {\r\n    return createStore(reducers,state);\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n//redux\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}